# --------------------------------------------------------
# 1. 컴파일러 및 플래그
# --------------------------------------------------------
CC          := gcc
CFLAGS      := -std=c11 -Wall -Wextra
NCURSESFLAG := -lncursesw    # 클라이언트 빌드 시 ncursesw 링크

# --------------------------------------------------------
# 2. 바이너리 이름 & 소스 경로
# --------------------------------------------------------
SERVER_BIN  := server          # 최종 생성될 서버 실행 파일 이름
CLIENT_BIN  := client          # 최종 생성될 클라이언트 실행 파일 이름

# 실제로 파일이 있는 위치(프로젝트 루트)
SERVER_SRC  := server.c        # server.c 파일이 루트에 위치
CLIENT_SRC  := client.c        # client.c 파일이 루트에 위치

# --------------------------------------------------------
# 3. 기본 대상: all (서버+클라이언트 빌드)
# --------------------------------------------------------
.PHONY: all
all: $(SERVER_BIN) $(CLIENT_BIN)

# --------------------------------------------------------
# 4. 서버 컴파일 규칙
# --------------------------------------------------------
$(SERVER_BIN): $(SERVER_SRC)
	@echo "=== 서버 빌드 중: $@ ==="
	$(CC) $(CFLAGS) -o $@ $<

# --------------------------------------------------------
# 5. 클라이언트 컴파일 규칙
# --------------------------------------------------------
$(CLIENT_BIN): $(CLIENT_SRC)
	@echo "=== 클라이언트 빌드 중: $@ ==="
	$(CC) $(CFLAGS) -o $@ $< $(NCURSESFLAG)

# --------------------------------------------------------
# 6. 실행용 편의 대상 (run-server / run-client)
# --------------------------------------------------------
.PHONY: run-server
run-server: $(SERVER_BIN)
	@echo ">> 서버 실행 중 (포트: 9190)"
	./$(SERVER_BIN) 9190

.PHONY: run-client
run-client: $(CLIENT_BIN)
	@echo ">> 클라이언트 실행 중 (127.0.0.1:9190)"
	./$(CLIENT_BIN) 127.0.0.1 9190

# --------------------------------------------------------
# 7. 정리 대상: clean
# --------------------------------------------------------
.PHONY: clean
clean:
	@echo ">> 빌드 결과물 삭제 중..."
	rm -f $(SERVER_BIN) $(CLIENT_BIN)
